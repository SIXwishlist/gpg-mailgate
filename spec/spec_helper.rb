require 'simplecov'
SimpleCov.start
require 'codeclimate-test-reporter'
require 'rspec'
require 'gpg_mailgate'
CodeClimate::TestReporter.start

# Don't you dare to use this key anywhere!
SPEC_PRIVATE_KEY =  "-----BEGIN PGP PRIVATE KEY BLOCK-----\n" \
                    "Version: BCPG C# v1.6.1.0\n\n" \
                    "lQOsBFUMgTIBCACKd22yAXIjBjItGggGbXeDwqhX3mifB1nbzAjldg5ptkwCjLBj\n" \
                    "VBf2Va5DPeAN406HmChsGVx5TYZNnv5GiwMa6viI8FgT2ldsjyTMuTtq2BQDXVrS\n" \
                    "pykY1pRhwkz1bUYBcPB3jJ4iNu8KmNOrK+x4EsJHgWQzlY3vTm08aILD0kAY5N63\n" \
                    "D5XkidHeluvq+x2jgwu/XGIimediAF6gZGKm6WNu3xwCFDQQCHjjDiQENSE99xHm\n" \
                    "ZxH0dZk11dTz5XiaeINmprh8AEQ3eEDHVuVWb+Lf/oR8HAT6kBQt4HLi0M0TSSta\n" \
                    "4woXRhx9Gl3IgUWFEXrYwRTc1pIOjDBKqByNABEBAAH/AwMCUfTM8ADTKCxgEx+u\n" \
                    "NrQovvoNr/TAuA168WjrOqcV+k1BWDAMsldkQ8DylaL0eh+dqdqlhjZCvHPi65Nz\n" \
                    "ZPxNWMW5VaTKvGNulpjU/msbDTiG4HdILW/tH8DpHTCATKQc3LE8qUiT3QGKgXUW\n" \
                    "oV7ZgQK6MjJeoNJE0hgeQ5RplOO3b9atfsiCZRQ1WYQcbLKuJPpJe9lTLU8MV07K\n" \
                    "8u/H6FwyYwboFxz7SMhhcWlGzX3u+Tq4p5At9dU20K9ie3z/3FQZP6nuNDWVeCJi\n" \
                    "32HfglDtCjprrZlnDNODys8Nb/FPGO9006VeN4+LiPcfQP4b7CRevU8gwktMtuRI\n" \
                    "D40+VR7bv54nQiGRvKr7MrST0+RgeRSSlTmkB1QeaFGMk6td0MPTvSoAwf7vCXKF\n" \
                    "5zvKX9V8RslQBKmEYzt2Jq2uKpV+47dXQx/yLSY8r95uhji47dNfIkOC65Ie1EDh\n" \
                    "aFeC/nF3qr38+3H0+Yp3U+0Arn+8lDJCBr5h/fQMmi2WzvQatC4GLEObXG3JsinG\n" \
                    "Z0wLRlHFos4XeU206Xpn/eQsipaUzdvreexxofof/0X1vHXXQTkKkP6Cy8RMwaaa\n" \
                    "p3SYqyl9f8Y0S53oloB8RHF7GSsin0ue3nr+K2nluKsP9baU0d1Yp2VSlX+rUMhZ\n" \
                    "tzAOKPdo85BLXzH8jeUqbgnkNlnBtDBDWm8BnCyWZCAWH4qeKDw7znVHxmmfaaoW\n" \
                    "S26lC3mzNH2rDdqNIKXey7WH7i0WAAM366VcGz6rh00gnor9DeJSZ32bcYmCZqSq\n" \
                    "7vjppsK064Q4Nmk86jeDg/0G2eUojTjMGtbZ903W/NzwaHdzu+T2OZ6qb7M/Fb/G\n" \
                    "vsZh5EFga88+d5ZtFyXVo3CW/6R8gUKGPgejTqfuh7QUdGVzdC1rZXlAZXhhbXBs\n" \
                    "ZS5jb22JARwEEAECAAYFAlUMgTIACgkQGdGwHl2KqHF52Af/SnzzWVYrBJ3BvCEx\n" \
                    "kld4eei0tDwBkjrO9T4DU9AP62rRo3jQmayQuTZF0tBn8XhLIfnbiYqh9MGKMyUE\n" \
                    "NLUSs8ty7zaFRq5jFw2qqkU42zqokVufyClIFtSjYqN/otRPYBa0KP+DGiSOgbrz\n" \
                    "qlaXcC8tm5CZJgjjWcx+b/T1odqj7B0xb64y6qR+SZSYwV9FDyeIOUvzdCtmN9po\n" \
                    "wP33DE0jXdFIBLrKVjUm25BXkZqqcrPIJ74Cm6gNfa9tXJrxSNumX0IK5sBheWbl\n" \
                    "pcmaIpraawehVCMY8cBl5bgbk/sxnCN+oAH/lMbxDTU9dNJgSC+6bURXsWAjsHdx\n" \
                    "4b2tmA==\n" \
                    "=19Qz\n" \
                    "-----END PGP PRIVATE KEY BLOCK-----\n"
GPGME::Key.import(SPEC_PRIVATE_KEY)

# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# The generated `.rspec` file contains `--require spec_helper` which will cause
# this file to always be loaded, without a need to explicitly require it in any
# files.
#
# Given that it is always loaded, you are encouraged to keep this file as
# light-weight as possible. Requiring heavyweight dependencies from this file
# will add to the boot time of your test suite on EVERY test run, even for an
# individual file that may not need all of that loaded. Instead, consider making
# a separate helper file that requires the additional dependencies and performs
# the additional setup, and require it from the spec files that actually need
# it.
#
# The `.rspec` file also contains a few flags that are not defaults but that
# users commonly want.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  # rspec-expectations config goes here. You can use an alternate
  # assertion/expectation library such as wrong or the stdlib/minitest
  # assertions if you prefer.
  config.expect_with :rspec do |expectations|
    # This option will default to `true` in RSpec 4. It makes the `description`
    # and `failure_message` of custom matchers include text for helper methods
    # defined using `chain`, e.g.:
    #     be_bigger_than(2).and_smaller_than(4).description
    #     # => "be bigger than 2 and smaller than 4"
    # ...rather than:
    #     # => "be bigger than 2"
    expectations.include_chain_clauses_in_custom_matcher_descriptions = true
  end

  # rspec-mocks config goes here. You can use an alternate test double
  # library (such as bogus or mocha) by changing the `mock_with` option here.
  config.mock_with :rspec do |mocks|
    # Prevents you from mocking or stubbing a method that does not exist on
    # a real object. This is generally recommended, and will default to
    # `true` in RSpec 4.
    mocks.verify_partial_doubles = true
  end

  config.add_setting :fixture_path
  config.fixture_path = File.join(File.dirname(__FILE__), 'fixtures')

  # The settings below are suggested to provide a good initial experience
  # with RSpec, but feel free to customize to your heart's content.
  # These two settings work together to allow you to limit a spec run
  # to individual examples or groups you care about by tagging them with
  # `:focus` metadata. When nothing is tagged with `:focus`, all examples
  # get run.
  # config.filter_run :focus
  # config.run_all_when_everything_filtered = true

  # Limits the available syntax to the non-monkey patched syntax that is
  # recommended. For more details, see:
  #   - http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax
  #   - http://teaisaweso.me/blog/2013/05/27/rspecs-new-message-expectation-syntax/
  #   - http://myronmars.to/n/dev-blog/2014/05/notable-changes-in-rspec-3#new__config_option_to_disable_rspeccore_monkey_patching
  config.disable_monkey_patching!

  # This setting enables warnings. It's recommended, but in some cases may
  # be too noisy due to issues in dependencies.
  config.warnings = true

  # Many RSpec users commonly either run the entire suite or an individual
  # file, and it's useful to allow more verbose output when running an
  # individual spec file.
  if config.files_to_run.one?
    # Use the documentation formatter for detailed output,
    # unless a formatter has already been configured
    # (e.g. via a command-line flag).
    config.default_formatter = 'doc'
  end

  # Print the 10 slowest examples and example groups at the
  # end of the spec run, to help surface which specs are running
  # particularly slow.
  config.profile_examples = 10

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = :random

  config.before(:all) do
    GpgMailgate::Config.load(File.join(RSpec.configuration.fixture_path, 'gpg-mailgate.yml'))
  end

  # Seed global randomization in this process using the `--seed` CLI option.
  # Setting this allows you to use `--seed` to deterministically reproduce
  # test failures related to randomization by passing the same `--seed` value
  # as the one that triggered the failure.
  Kernel.srand config.seed
end
